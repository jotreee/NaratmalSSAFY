plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //swagger
    implementation("io.springfox:springfox-swagger2:3.0.0")
    implementation("io.springfox:springfox-swagger-ui:3.0.0")
    implementation("io.springfox:springfox-data-rest:3.0.0")
    implementation("io.springfox:springfox-bean-validators:3.0.0")
    implementation("io.springfox:springfox-boot-starter:3.0.0")
//    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation('commons-io:commons-io:2.6')
    implementation("org.apache.commons:commons-collections4:4.4")
    implementation("org.apache.commons:commons-lang3:3.9")
//    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("com.auth0:java-jwt:3.10.3")
    implementation("com.google.guava:guava:29.0-jre")
    annotationProcessor("com.google.guava:guava:29.0-jre")

    //qeuryDSL
//    annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jpa")
//    implementation("com.querydsl:querydsl-jpa:5.0.0")
//    implementation("com.querydsl:querydsl-apt:5.0.0")
//    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
//    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    implementation'com.google.code.gson:gson:2.10'
    implementation('org.apache.httpcomponents:httpclient:4.5')
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation 'commons-codec:commons-codec:1.9'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}


//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//    querydsl.extendsFrom compileClasspath
//}


tasks.named('test') {
    useJUnitPlatform()
}

def profile = project.hasProperty("profile") ? project.property("profile").toString() : "dev"
println "profile  : $profile"

sourceSets {
    main {
        resources {
            srcDirs("src/main/resources", "src/main/resources-$profile")
        }
    }
}

tasks {
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}
